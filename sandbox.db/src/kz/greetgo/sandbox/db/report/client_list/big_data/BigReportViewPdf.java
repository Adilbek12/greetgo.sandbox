package kz.greetgo.sandbox.db.report.client_list.big_data;

import kz.greetgo.sandbox.controller.model.ClientInfo;
import kz.greetgo.sandbox.controller.report.BigReportView;
import kz.greetgo.sandbox.controller.report.ReportFootData;
import kz.greetgo.sandbox.controller.report.ReportHeadData;

import java.io.File;
import java.io.FileOutputStream;
import java.io.PrintStream;
import java.text.SimpleDateFormat;
import java.util.Date;

public class BigReportViewPdf implements BigReportView {

  private PrintStream printStream;

  public BigReportViewPdf(PrintStream printStream) {
    this.printStream = printStream;
  }

  @Override
  public void start(ReportHeadData headData) {
    printStream.println("some pdf header");
    printStream.println("title: " + headData.title);
  }

  @Override
  public void addRow(ClientInfo row) {
    printStream.print("col1: " + row.id);
    printStream.print(" col2: " + row.surname);
    printStream.println(" col3: " + row.name);
  }

  @Override
  public void finish(ReportFootData footData) {
    if (footData.generatedBy != null) {
      printStream.println("Generated by: " + footData.generatedBy);
      if (footData.generatedAt != null) {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm");
        printStream.println("Generated at: " + sdf.format(footData.generatedAt));
      }
    }
    printStream.println("some pdf footer");
  }

  public static void main(String[] args) throws Exception {
    File file = new File("build/report/Big_report.txt");
    file.getParentFile().mkdirs();

    try (FileOutputStream fileOutputStream = new FileOutputStream(file)) {
      try (PrintStream printStream = new PrintStream(fileOutputStream, false, "UTF-8")) {

        BigReportViewPdf viewPdf = new BigReportViewPdf(printStream);
        ReportHeadData head = new ReportHeadData();
        head.title = "Мюон";
        viewPdf.start(head);

        for (int i = 0; i < 100; i++) {
          ClientInfo row = new ClientInfo();
          row.id = "col1 of " + i;
          row.surname = "col2 of " + i;
          row.name = "col3 of " + i;
          viewPdf.addRow(row);
        }

        ReportFootData foot = new ReportFootData();
        foot.generatedBy = "Кристиан Бэйл";
        foot.generatedAt = new Date();
        viewPdf.finish(foot);

      }
    }
  }
}
